stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
scale_colour_manual(values=c("red","blue"))+
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_point(size = 1,alpha = 0.2) +
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +  scale_colour_manual("",
breaks = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_point(size = 1,alpha = 0.2) +
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_colour_identity("",
breaks = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_point(size = 1,alpha = 0.2) +
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_fill_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_point(size = 1,alpha = 0.2) +
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
stat_summary(geom = "point",
fun = "median", col = "blue",size = 1, fill = "blue") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n outliers (over 0.002 sec) left out of the plot.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "line",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n
Mean marked in red.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
point
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n
Mean marked in red.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red, Median marked in line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5)) +
scale_color_manual("",
limits = c("Mean", "Median"),
values = c("red", "blue"))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(dendextend)
library(readxl)
library(fuzzyjoin)
library(stringr)
library(ggdendro)
library(factoextra)
options(scipen = 999)
ob <- c(rep(1,20),rep(2,30),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
calculate.accuracy <- function(data, cluster_data){
tab <- table(data,cluster_data)
s <- 0
b <- NULL
for(i in 1:3){
w<- tab[,i]
m <- max(w)
wm <- which.max(w)
while(wm %in% b){
w <- w[-wm,]
m <- max(w)
wm <- colnames(w)[which.max(w)]
}
s<- s+m
}
s <- s/100
return(s)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1,algorithm = "Lloyd")
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- calculate.accuracy(accurancy,ob)
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,6,9)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate(n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",6),paste0("p = ",10, ",sigma = ",9),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",6),paste0("p = ",20, ",sigma = ",9),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",6),paste0("p = ",50, ",sigma = ",9))
k_sh_p <- c(rep(10,4),rep(20,4),rep(50,4))
k_col_sig <- rep(sigma_list,3)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)/sqrt(50)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
temp <- cbind(temp,k_col_sig,k_sh_p)
temp <- as.data.frame(temp)
ggplot(temp,aes( y = avg,x=factor(k_col_sig))) +
geom_bar(stat="identity",position="dodge") +
facet_grid(~factor(k_sh_p))+
geom_errorbar(data = temp,aes(ymin=avg-sd_accurancy,
ymax=avg + sd_accurancy), width=.2,position=position_dodge(.9)) +
geom_text(aes(label=avg), vjust=1.6, color="white", size=3.5)+
facet_grid(~factor(k_sh_p))+ theme_light()  +
xlab("Devided by sigma & p levels")+
ylab("Accurancy Average") +
ggtitle(label = "Averege acurrency bar plot", subtitle = "Caculated over 50 simulations. Displayed by the different sigmas and p with standard error bar") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Vectors Variables \n Number", colour="SE of \n the Vectors") + ylim(c(0,1))
kable(temp[,1:2]) %>% kable_styling()
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(dendextend)
library(readxl)
library(fuzzyjoin)
library(stringr)
library(ggdendro)
library(factoextra)
options(scipen = 999)
ob <- c(rep(1,20),rep(2,30),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
calculate.accuracy <- function(data, cluster_data){
tab <- table(data,cluster_data)
s <- 0
b <- NULL
for(i in 1:3){
w<- tab[,i]
m <- max(w)
wm <- which.max(w)
while(wm %in% b){
w <- w[-wm,]
m <- max(w)
wm <- colnames(w)[which.max(w)]
}
s<- s+m
}
s <- s/100
return(s)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1,algorithm = "Lloyd")
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- calculate.accuracy(accurancy,ob)
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,6,9)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate(n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",6),paste0("p = ",10, ",sigma = ",9),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",6),paste0("p = ",20, ",sigma = ",9),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",6),paste0("p = ",50, ",sigma = ",9))
k_sh_p <- c(rep(10,4),rep(20,4),rep(50,4))
k_col_sig <- rep(sigma_list,3)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)/sqrt(50)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
temp <- cbind(temp,k_col_sig,k_sh_p)
temp <- as.data.frame(temp)
ggplot(temp,aes( y = avg,x=factor(k_col_sig))) +
geom_bar(stat="identity",position="dodge") +
facet_grid(~factor(k_sh_p))+
geom_errorbar(data = temp,aes(ymin=avg-sd_accurancy,
ymax=avg + sd_accurancy), width=.2,position=position_dodge(.9)) +
geom_text(aes(label=avg), vjust=1.6, color="white", size=3.5)+
facet_grid(~factor(k_sh_p))+ theme_light()  +
xlab("Devided by sigma & p levels")+
ylab("Accurancy Average") +
ggtitle(label = "Averege acurrency bar plot", subtitle = "Caculated over 50 simulations. Displayed by the different sigmas and p with standard error bar") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Vectors Variables \n Number", colour="SE of \n the Vectors") + ylim(c(0,1))
kable(temp[,1:2]) %>% kable_styling()
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
temp2 <-bind_rows(temp2, .id = "column_label")
k_sh_p <- c(rep(10,4*50),rep(20,4*50),rep(50,4*50))
k_col_sig <- rep(rep(sigma_list, each = 50),3)
temp2 <- cbind(temp2,k_col_sig,k_sh_p)
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() +
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() + ylim(c(0,0.005))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() + ylim(c(0,0.003))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() + ylim(c(0,0.003))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
ggplot(temp2, aes(y = run.time, x =factor(k_col_sig))) + facet_grid(~factor(k_sh_p))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean", col = "red",size = 1, fill = "red") +
theme_light() + ylim(c(0,0.002))+
xlab("")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time", subtitle = "Displayed by diffrenet sigmas and variable amouמt. \n Mean marked in red point5, Median marked in bold line.")+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(axis.text.x = element_text(angle = 00, vjust = 0.5))
med_dat <- read.delim('C:/Users/abig4/OneDrive/Documents/GitHub/Statistical-Learning_Lab_2/gtex_Kmeans/gtex.gct',
skip = 2 ,row.names=c(1) , header = TRUE)
#med_dat <- read.delim("C:/Users/Shahar/Documents/GitHub/Statistical-Learning_Lab_2/gtex_Kmeans/gtex.gct",
#                      skip = 2 ,row.names=c(1) , header = TRUE)
gen_names <- med_dat[, 1]
med_dat <- med_dat[,-1]
med_dat <- transpose(med_dat)
med_dat_2 <- as.data.frame(med_dat[,1:2000])
set.seed(92)
k_means_shiny <- function(k){
data_prep <- scale(med_dat_2,T,T)
data_prep <- data_prep
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
clus <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
data_prep <- cbind(data_prep, clus)
while(any(abs(m_new - m_old)) > 0.1){
data_prep <- as.data.frame(data_prep)
m_old <- m_new
m_new <- aggregate(.~clus, data_prep, FUN = mean)
m_new <- m_new[,-1]
data_prep$clus<- data_prep[,-1]  %>% apply(1,FUN = c_fun,m = m_new)
print(m_new)
print(m_old)
}
return(data_prep$clus)
}
c_fun <- function(d,m){
p <- sweep(m,1,d,FUN = "-")
p <- (as.data.frame(p))**2
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(6)
shiny::runApp('GitHub/Statistical-Learning_Lab_2/gtex_Kmeans')
