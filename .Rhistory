labels(hc.c) = as.character(cbs_demographics_20$village)
score_vec[i] <- cor_cophenetic(hc.c3,as.dendrogram(hc.c), use_labels_not_values = FALSE, to_plot = FALSE,
warn = dendextend_options("warn"))
}
p_val <- (sum(cor_cophenetic < score_vec))/ N
cat("The P-Value is equal to", p_val)
plot(density(score_vec),
main = "cor_cophenetic dist",
xlim = c(-0.7,0.7))
abline(v = cor_cophenetic, lty = 2, col = "orange4")
abline(v=mean(score_vec), lty= 2, col ="yellow4")
legend("right", legend =  "cor_cophenetic score", fill = "orange4")
legend("center", legend =  "mean score", fill = "yellow4")
#Removing the 8 first columns in order to keep only the number of votes for all the parties in each city.
#Normalize the Data.
knesset_24_20_clust <-  knesset_24_20[,-c(1:8)] %>% mutate_all(~ ./row_sum)
knesset_villages <- c('ASHDOD','ASHQELON','BEER SHEVA','HADERA','HAIFA','PETAH TIQWA','RISHONLEZIYYON','REHOVOT','BET SHEMESH','BAT YAM','JERUSALEM','KEFAR SAVA','MODIINMAKKABBIMREUT','RAANNANA','BENE BERAQ','HOLON','RAMATGAN','TELAVIVYAFO','NETANYA','HERZLIYYA')
knesset_villages <- as.data.frame(knesset_villages)
#Creation of the distance matrix
distance_matrix <- dist(knesset_24_20_clust, method = 'euclidean')
#Cluster
hc.c <- hclust(distance_matrix)
labels(hc.c) = as.character(knesset_villages$knesset_villages)
#Plotting the Dendrogram
plot(hc.c, labels = knesset_villages$knesset_villages , main = 'Hierarchical tree for the elections data')
#Preparing the data and normalizing it.
#cbs_demographics_20_cluster <- cbs_demographics_20 %>% select(income,pct_belowminimum,pct_wmn_noincome) %>% scale(scale = TRUE)
cbs_demographics_20_cluster <- cbs_demographics_20[,-16] %>% scale(scale = TRUE)
#Creation of the distance matrix
distance_matrix <- dist(cbs_demographics_20_cluster, method = 'euclidean')
#Cluster
hc.c2 <- hclust(distance_matrix)
labels(hc.c2) = as.character(cbs_demographics_20$village)
#Plotting the Dendrogram
plot(hc.c2, labels = cbs_demographics_20$village,main = 'Hierarchical tree for Demographic Data')
#Removing the 8 first columns in order to keep only the number of votes for all the parties in each city.
#Normalize the Data.
knesset_24_20_clust <-  knesset_24_20[,-c(1:8)] %>% mutate_all(~ ./row_sum)
knesset_villages <- c('ASHDOD','ASHQELON','BEER SHEVA','HADERA','HAIFA','PETAH TIQWA','RISHONLEZIYYON','REHOVOT','BET SHEMESH','BAT YAM','JERUSALEM','KEFAR SAVA','MODIINMAKKABBIMREUT','RAANNANA','BENE BERAQ','HOLON','RAMATGAN','TELAVIVYAFO','NETANYA','HERZLIYYA')
knesset_villages <- as.data.frame(knesset_villages)
#Creation of the distance matrix
distance_matrix <- dist(knesset_24_20_clust, method = 'euclidean')
#Cluster
hc.c <- hclust(distance_matrix)
labels(hc.c) = as.character(knesset_villages$knesset_villages)
#Plotting the Dendrogram
plot(hc.c, labels = knesset_villages$knesset_villages , main = 'Hierarchical tree for the elections data')
#load the data frames
knesset_df <- read.csv("C:/Users/Shahar/Dropbox/zugi/lemida/knesset_24.csv", encoding = "UTF-8")
CBS_df <- read_excel("C:/Users/Shahar/Dropbox/zugi/lemida/t01.xls")
#first, we merge the data frames to find the matching locations in both.
merged_df <- left_join(CBS_df, knesset_df, by = "סמל.ישוב")
#add "שם.ישוב" coloumn to the CBS data frame
names_df <- as.data.frame(knesset_df[,2:3])
CBS_df <- left_join(CBS_df, names_df)
#semple 20 locations
set.seed(20)
Semp_20 <- sample(merged_df$"סמל.ישוב" , 20)
# sum all the votes for each location
#calculate the persents of votes for each party in every location
knesset_df_norm <- knesset_df %>%rowwise %>% mutate(total_votes = sum(c_across( 8:46))) %>% ungroup() %>%  mutate(round(across(8:46, ~ . / total_votes),3))
#filter each data frame for the sempled values.
knesset_semp20 <- filter(knesset_df_norm, knesset_df_norm$"סמל.ישוב" %in% Semp_20)
CBS_semp20 <- filter(CBS_df, CBS_df$"סמל.ישוב" %in% Semp_20)
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
CBS_dist <- CBS_semp20[,6:17] %>% scale %>% dist %>% hclust(method = "complete")
CBS_dend <- as.dendrogram(CBS_dist)
labels(CBS_dend) <- as.character(CBS_semp20$'שם.ישוב')
CBS_plot <- ggplot(CBS_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8), horiz = TRUE) +
ggtitle("Hirarchical tree of the CBS datas with complete linked algorithm", "*Each color present diffrent cluster")
CBS_plot
CBS_semp20[,6:17]
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- plot_ggdendro(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
horiz = TRUE) +
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) ,
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster") + ylab("dis")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster") +theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.title = element_blank())
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster") + theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.title = element_blank())
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUEת  theme = theme_minimal()) +
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal()) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal()) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster")
Knesst_plot
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal()) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster") + ylab("Distance") + xlab(" ")
Knesst_plot
CBS_dist <- CBS_semp20[,6:17] %>% scale %>% dist %>% hclust(method = "complete")
CBS_dend <- as.dendrogram(CBS_dist)
labels(CBS_dend) <- as.character(CBS_semp20$'שם.ישוב')
CBS_plot <- ggplot(CBS_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8), horiz = TRUE, theme = theme_minimal()) +
ggtitle("Hirarchical tree of the CBS datas with complete linked algorithm", "*Each color present diffrent cluster")+ ylab("Distance") + xlab(" ")
CBS_plot
#first, we merge the data frames to find the matching locations in both.
merged_df <- left_join(CBS_df, knesset_df, by = "סמל.ישוב")
#add "שם.ישוב" coloumn to the CBS data frame
names_df <- as.data.frame(knesset_df[,2:3])
CBS_df <- left_join(CBS_df, names_df)
#semple 20 locations
Semp_20 <- sample(merged_df$"סמל.ישוב" , 20)
# sum all the votes for each location
#calculate the persents of votes for each party in every location
knesset_df_norm <- knesset_df %>%rowwise %>% mutate(total_votes = sum(c_across( 8:46))) %>% ungroup() %>%  mutate(round(across(8:46, ~ . / total_votes),3))
#filter each data frame for the sempled values.
knesset_semp20 <- filter(knesset_df_norm, knesset_df_norm$"סמל.ישוב" %in% Semp_20)
CBS_semp20 <- filter(CBS_df, CBS_df$"סמל.ישוב" %in% Semp_20)
#first, we merge the data frames to find the matching locations in both.
merged_df <- left_join(CBS_df, knesset_df, by = "סמל.ישוב")
#add "שם.ישוב" coloumn to the CBS data frame
names_df <- as.data.frame(knesset_df[,2:3])
CBS_df <- left_join(CBS_df, names_df)
#semple 20 locations
set.seed(20)
Semp_20 <- sample(merged_df$"סמל.ישוב" , 20)
# sum all the votes for each location
#calculate the persents of votes for each party in every location
knesset_df_norm <- knesset_df %>%rowwise %>% mutate(total_votes = sum(c_across( 8:46))) %>% ungroup() %>%  mutate(round(across(8:46, ~ . / total_votes),3))
#filter each data frame for the sempled values.
knesset_semp20 <- filter(knesset_df_norm, knesset_df_norm$"סמל.ישוב" %in% Semp_20)
CBS_semp20 <- filter(CBS_df, CBS_df$"סמל.ישוב" %in% Semp_20)
knesst_dist <- knesset_semp20[,c(8:46)] %>% dist %>% hclust(method = "complete")
knesst_dend <- as.dendrogram(knesst_dist)
labels(knesst_dend) <- as.character(knesset_semp20$'שם.ישוב')
Knesst_plot <- ggplot(knesst_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8),
horiz = TRUE,  theme = theme_minimal()) +
ggtitle("Hirarchical tree of the 24 election datas with complete linked algorithm", "*Each color present diffrent cluster") + ylab("Distance") + xlab(" ")
Knesst_plot
CBS_dist <- CBS_semp20[,6:17] %>% scale %>% dist %>% hclust(method = "complete")
CBS_dend <- as.dendrogram(CBS_dist)
labels(CBS_dend) <- as.character(CBS_semp20$'שם.ישוב')
CBS_plot <- ggplot(CBS_dend %>%
set('branches_lwd', 0.7) %>%
set('labels_cex', 0.8), horiz = TRUE, theme = theme_minimal()) +
ggtitle("Hirarchical tree of the CBS datas with complete linked algorithm", "*Each color present diffrent cluster")+ ylab("Distance") + xlab(" ")
CBS_plot
dl <- dendlist(highlight_branches_col(knesst_dend), highlight_branches_col(CBS_dend))
tanglegram(dl, sort = TRUE, common_subtrees_color_lines = FALSE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset")
dl <- dendlist(highlight_branches_col(knesst_dend), highlight_branches_col(CBS_dend))
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE,color_lines = Fת main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE,color_lines =F, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE,color_lines= T, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  margin_outer = 1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  margin_outer = 100)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  margin_outer = 100)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  margin_outer = 10)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  margin_outer = 0.1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", intersecting = T)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", intersecting = F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", edge.lwd = 0.8)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", edge.lwd =5)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf = 1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf =0.2)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf =0.1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf =0.001)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", type = "t")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", lab.cex = 0.8)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", match_order_by_labels= F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", highlight_branches_col = T)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", highlight_branches_col = F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", axes  = F )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", lab.cex = "shaha" )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", lab.cex = 0.5 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", lab.cex = 0.8 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", lab.cex = 1 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset",  )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.5 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.1 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.1 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 )
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = 0.01)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = 0.02)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = 0.1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = 1)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.3)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.4)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.75)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, hang = T)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, match_order_by_labels = F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, common_subtrees_color_lines =F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, common_subtrees_color_branches =F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, common_subtrees_color_branches =T)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, color_branches = f)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, color_branches = F)
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, color_branches = "black")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, color` =  "black")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, color` =  "black")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6, colors =  "black")
tanglegram(dl, sort = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd = FALSE, main_left = "CBS", main_right = "Knesset", dLeaf_left = 0.01 , dLeaf_right = -0.6)
dend <- knesst_dend
dend1 <- CBS_dend
cor <- cor_bakers_gamma(dend,dend1)
cor
print(paste("The correlation between the two dendograms is: ", cor)
print(paste("The correlation between the two dendograms is: ", cor))
dend <- knesst_dend
dend1 <- CBS_dend
cor <- cor_bakers_gamma(dend,dend1)
print(paste("The correlation between the two dendograms is: ", cor))
dend <- knesst_dend
dend1 <- CBS_dend
cor <- cor_bakers_gamma(dend,dend1)
print(paste("The correlation between the two dendograms is: ", round(cor,3)))
the_cor <- cor_bakers_gamma(dend,dend)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
legend("topleft", legend = c("cor"), fill = c(2,4))
title(sub = paste("One sided p-value:",
"cor =",  round(sum(the_cor < cor_bakers_gamma_results)/ R, 4)))
the_cor <- cor_bakers_gamma(dend,dend)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
legend("topleft", legend = c("cor"), fill = c(2,4))
title(sub = paste("One sided p-value:",
"cor =",  round(sum(the_cor < cor_bakers_gamma_results)/ R, 4)))
the_cor <- cor_bakers_gamma(dend,dend)
t
the_cor
the_cor <- cor_bakers_gamma(dend,dend1)
the_cor
the_cor <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
legend("topleft", legend = c("cor"), fill = c(2,4))
title(sub = paste("One sided p-value:",
"cor =",  round(sum(the_cor < cor_bakers_gamma_results)/ R, 4)))
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend15
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend15, dend_mixed)
}
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend1
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend1, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend1
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend1, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
title(sub = paste("One sided p-value:",
"cor =",  round(sum(the_cor < cor_bakers_gamma_results)/ R, 4),
" ; cor2 =",  round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
))
the_cor2
cor_bakers_gamma_results
the_cor2 < cor_bakers_gamma_results
sum(the_cor2 < cor_bakers_gamma_results)
cor_bakers_gamma_results
the_cor2
the_cor <- cor_bakers_gamma(dend,dend)
the_cor2 <- cor_bakers_gamma(dend,dend1)
R <- 100
cor_bakers_gamma_results <- numeric(R)
dend_mixed <- dend
for(i in 1:R) {
dend_mixed <- sample.dendrogram(dend_mixed, replace = FALSE)
cor_bakers_gamma_results[i] <- cor_bakers_gamma(dend, dend_mixed)
}
plot(density(cor_bakers_gamma_results),
main = "Baker's gamma distribution under H0",
xlim = c(-1,1))
abline(v = 0, lty = 2)
abline(v = the_cor, lty = 2, col = 2)
abline(v = the_cor2, lty = 2, col = 4)
legend("topleft", legend = c("cor", "cor2"), fill = c(2,4))
round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)
title(sub = paste("One sided p-value:",
"cor =",  round(sum(the_cor < cor_bakers_gamma_results)/ R, 4),
" ; cor2 =",  round(sum(the_cor2 < cor_bakers_gamma_results)/ R, 4)))
