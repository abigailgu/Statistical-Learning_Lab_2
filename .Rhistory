m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
print(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- c_t
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.data.frame(c_t)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.matrix(c_t)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
print(class(c_t[1]))
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
print(class(c_t))
print(class(c_t[1]))
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.data.frame(c_t)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
return(c_t)
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.data.frame(c_t)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.data.frame(matrix(unlist(c_t),nrow=length(c_t),byrow=TRUE))
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- as.data.frame(matrix(unlist(c_t),nrow=length(c_t),byrow=TRUE))
print(data_prep["cluster"])
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
print(class(data_prep["cluster"]))
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- do.call(rbind,c_t)
print(data_prep["cluster"])
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
print(class(c_t))
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
print(class(c_t))
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- do.call(rbind,c_t)
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <-as.matrix(apply(data_prep,1 ,FUN = c_fun, m=m_new))
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- do.call(rbind,c_t)
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
?group_by
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- c_t
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% apply(1, mean)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- c_t
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% summarise(colSums)
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep["cluster"] <- c_t
print(class(data_prep["cluster"]))
m_old <- m_new
m_new <- data_prep %>% group_by('cluster') %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,!"cluster"]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,"cluster"])
}
return(data_prep[,"cluster"])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <- c_t
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
?bind_rows
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <-bind_rows(c_t)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <-bind_rows(c_t,.id = NULL)
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <- c_t
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <- c_t
print(data_prep[5,])
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
k_means_shiny <- function(k){
data_prep <- scale(med_dat,T,T)
data_prep[is.na(data_prep)] <- 0
m_new <- as.data.frame(data_prep[sample(1:53,k),])
c_t <- apply(data_prep,1 ,FUN = c_fun, m=m_new)
m_old <- as.data.frame(data_prep[sample(1:53,k),])
while(any(abs(m_new - m_old)) > 0.1){
data_prep$cluster <- c_t
print(class(data_prep))
m_old <- m_new
m_new <- data_prep %>% group_by(cluster) %>% summarise_all(.funs = c(mean="mean"))
print(m_new)
c_t <- data_prep[,-cluster]  %>% apply(1,FUN = c_fun,m = m_new)
print(data_prep[,cluster])
}
return(data_prep[,cluster])
}
c_fun <- function(d,m){
p <- sweep(m,2,d,FUN = "-")
p <- as.data.frame(p)
p <- p*p
p <- as.matrix(apply(p,1, sum))
p <- which.min(p)
return(p)
}
k_means_shiny(15)
