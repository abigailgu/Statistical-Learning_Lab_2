library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(dendextend)
library(readxl)
library(fuzzyjoin)
library(stringr)
library(ggdendro)
library(factoextra)
options(scipen = 999)
ob <- c(rep(1,20),rep(2,30),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
calculate.accuracy <- function(data, cluster_data){
tab <- table(data,cluster_data)
s <- 0
b <- NULL
for(i in 1:3){
w<- tab[,i]
m <- max(w)
wm <- which.max(w)
while(wm %in% b){
w <- w[-wm,]
m <- max(w)
wm <- which.max(w)
}
s<- s+m
}
s <- s/100
return(s)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1,algorithm = "Lloyd")
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- calculate.accuracy(accurancy,ob)
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,6,9)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",6),paste0("p = ",10, ",sigma = ",9),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",6),paste0("p = ",20, ",sigma = ",9),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",6),paste0("p = ",50, ",sigma = ",9))
k_sh_p <- c(rep(10,4),rep(20,4),rep(50,4))
k_col_sig <- rep(sigma_list,3)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
temp <- cbind(temp,k_col_sig,k_sh_p)
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) + geom_point()
#kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
#load the data frames
knesset_df <- read.csv("C:/Users/Shahar/Dropbox/zugi/lemida/knesset_24.csv", encoding = "UTF-8")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p),size = 2)) + geom_point()
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p),size = 1.5)) + geom_point()
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p),size = 1)) + geom_point()
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p),size = 0.5)) + geom_point()
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) + geom_point()
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) + geom_point(size = 1.5)
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) + geom_point(size = 2)
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p)
geom_bar(stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
geom_bar(stat="identity") +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p)
geom_bar(stat="identity") +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p)
geom_bar() +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
geom_bar() +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
geom_bar() +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg)) + facet_wrap(~k_sh_p) +
geom_bar(aes( color = factor(k_col_sig))) +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg))  +
geom_bar(aes( color = factor(k_col_sig))) +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg))  +
geom_bar(aes( color = factor(k_col_sig)))
ggplot(temp,aes(x = sd_accurancy, y = avg))  +
geom_bar()
ggplot(temp,aes( y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
geom_bar() +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes( y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
geom_bar(stat="identity") +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes( y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes( y = avg, color = factor(k_col_sig))) + facet_wrap(~k_sh_p) +
geom_bar() +
ggtitle("Studying 4 species..") +
xlab("")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
labs(fill = "Varibals number") + theme(legend.title = element_text(color = "blue", size = 10),
legend.text = element_text(color = "red"))
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black"))
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Sigma", colour="Vectors Variables Number")
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Vectors Variables \n Number", colour="SE of \n the Vectors")
temp2 <-bind_rows(temp2, .id = "column_label")
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
temp2 <-bind_rows(temp2, .id = "column_label")
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(dendextend)
library(readxl)
library(fuzzyjoin)
library(stringr)
library(ggdendro)
library(factoextra)
options(scipen = 999)
ob <- c(rep(1,20),rep(2,30),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
calculate.accuracy <- function(data, cluster_data){
tab <- table(data,cluster_data)
s <- 0
b <- NULL
for(i in 1:3){
w<- tab[,i]
m <- max(w)
wm <- which.max(w)
while(wm %in% b){
w <- w[-wm,]
m <- max(w)
wm <- which.max(w)
}
s<- s+m
}
s <- s/100
return(s)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1,algorithm = "Lloyd")
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- calculate.accuracy(accurancy,ob)
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,6,9)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",6),paste0("p = ",10, ",sigma = ",9),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",6),paste0("p = ",20, ",sigma = ",9),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",6),paste0("p = ",50, ",sigma = ",9))
k_sh_p <- c(rep(10,4),rep(20,4),rep(50,4))
k_col_sig <- rep(sigma_list,3)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
temp <- cbind(temp,k_col_sig,k_sh_p)
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Vectors Variables \n Number", colour="SE of \n the Vectors")
#kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
#load the data frames
knesset_df <- read.csv("C:/Users/Shahar/Dropbox/zugi/lemida/knesset_24.csv", encoding = "UTF-8")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label, col = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label, col = "grey")) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label, col = "gray")) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label, col = "darkblue")) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label, color = "gray")) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_light()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_light()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_dark()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_grey()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.")
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time vs Accurancy", subtitle = "Displayed diffrant sigmas and p.") +   theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"))
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(dendextend)
library(readxl)
library(fuzzyjoin)
library(stringr)
library(ggdendro)
library(factoextra)
options(scipen = 999)
ob <- c(rep(1,20),rep(2,30),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
calculate.accuracy <- function(data, cluster_data){
tab <- table(data,cluster_data)
s <- 0
b <- NULL
for(i in 1:3){
w<- tab[,i]
m <- max(w)
wm <- which.max(w)
while(wm %in% b){
w <- w[-wm,]
m <- max(w)
wm <- which.max(w)
}
s<- s+m
}
s <- s/100
return(s)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1,algorithm = "Lloyd")
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- calculate.accuracy(accurancy,ob)
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,6,9)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",6),paste0("p = ",10, ",sigma = ",9),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",6),paste0("p = ",20, ",sigma = ",9),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",6),paste0("p = ",50, ",sigma = ",9))
k_sh_p <- c(rep(10,4),rep(20,4),rep(50,4))
k_col_sig <- rep(sigma_list,3)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
temp <- cbind(temp,k_col_sig,k_sh_p)
ggplot(temp,aes(x = sd_accurancy, y = avg, color = factor(k_col_sig), shape = factor(k_sh_p))) +
geom_point(size = 2) +   theme_light()  +
xlab("Accurancy Standard Error")+ ylab("Accurancy Average") +
ggtitle(label = "Averege vs Standard Error", subtitle = "Caculated over 50 simulations. Displayed according to diffrant sigmas and p.") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold")) +
theme(legend.title = element_text(color = "black", size = 10),
legend.text = element_text(color = "black")) +
labs(shape="Vectors Variables \n Number", colour="SE of \n the Vectors")
#kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time vs Accurancy", subtitle = "Displayed diffrant sigmas and p.") +   theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"))
#load the data frames
knesset_df <- read.csv("C:/Users/Shahar/Dropbox/zugi/lemida/knesset_24.csv", encoding = "UTF-8")
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time vs Accurancy", subtitle = "Displayed diffrant sigmas and p.") +   theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"))
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time vs Accurancy", subtitle = "Displayed diffrant sigmas and p.") +   theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"))
#kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(y = run.time, x = accurancy, group = column_label)) + geom_point()+ facet_wrap(~column_label)+ theme(legend.position = "none") +
theme_gray()  +
xlab("Accurancy of K-means")+ ylab("Run time for K-mean convergence") +
ggtitle(label = "Run time vs Accurancy", subtitle = "Displayed diffrant sigmas and p.") +   theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 10, face = "bold"))
