df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
row.names(df) <- l[i]
}
print(df)
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
print(df)
row.names(df) <- l[i]
}
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),
sd_run.time = sd(df$run.time))
print(df)
row.names(df) <- l[i]
}
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),
sd_run.time = sd(df$run.time)),3)
print(df)
row.names(df) <- l[i]
}
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),
sd_run.time = sd(df$run.time)),3)
temp <- rbind(temp,df)
}
View(temp)
?sd
row.names(temp) <- l
library('MASS')
library(data.table)
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1)
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$betweenss # not sure but need somting for accurancy
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,5,7)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",5),paste0("p = ",10, ",sigma = ",7),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",5),paste0("p = ",20, ",sigma = ",7),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",5),paste0("p = ",50, ",sigma = ",7))
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),
sd_run.time = sd(df$run.time)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),3)
temp <- rbind(temp,df)
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy),3)
temp <- rbind(temp,df)
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
```{r,warning= False, message=FALSE}
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
?kmeans
library(sklearn)
install.packages("forcast")
library('MASS')
library(data.table)
ob <- cbind(rep(1,10),rep(2,20),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1)
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- sum(accurancy == ob)/100
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,5,7)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",5),paste0("p = ",10, ",sigma = ",7),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",5),paste0("p = ",20, ",sigma = ",7),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",5),paste0("p = ",50, ",sigma = ",7))
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
library('MASS')
library(data.table)
ob <- cbind(rep(1,10),rep(2,20),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1)
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- sum(accurancy == ob)/100
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,5,7)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",5),paste0("p = ",10, ",sigma = ",7),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",5),paste0("p = ",20, ",sigma = ",7),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",5),paste0("p = ",50, ",sigma = ",7))
temp <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
library(ggplot2)
ggplot(temp,aes(x = sd_accurancy, y = avg)) + geom_point()
temp <- as.data.frame(temp)
ggplot(temp,aes(x = sd_accurancy, y = avg)) + geom_point()
library(kableExtra)
temp %>% kable()
kable(temp) %>% kable_styling()
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,df)
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
View(temp2)
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,llist(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp) <- l
row.names(temp2) <- l
library(dplyr)
temp2 <-bind_rows(temp2, .id = "column_label")
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
ob <- cbind(rep(1,10),rep(2,20),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1)
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- sum(accurancy == ob)/100
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,5,7)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",5),paste0("p = ",10, ",sigma = ",7),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",5),paste0("p = ",20, ",sigma = ",7),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",5),paste0("p = ",50, ",sigma = ",7))
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
ggplot(temp,aes(x = sd_accurancy, y = avg)) + geom_point()
kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
?bind_rows
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
row.names(temp2) <- l
row.names(temp) <- l
temp2 <-bind_rows(temp2, .id = "column_label")
?bind_rows
names(temp2) <- l
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
names(temp2) <- l
temp2 <-bind_rows(temp2, .id = "column_label")
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(x = run.time, y = accurancy, col = column_label))
ggplot(temp2, aes(x = run.time, y = accurancy, col = column_label)) + geom_line()
ggplot(temp2, aes(x = run.time, y = accurancy)) + geom_line(aes(group = column_label))
library('MASS')
library(data.table)
library(ggplot2)
library(kableExtra)
library(dplyr)
ob <- cbind(rep(1,10),rep(2,20),rep(3,50))
sampling <- NULL
for (i in 1:10) {
first_10 <- rnorm(3,0,1) #mu
sampling <- rbind(sampling,first_10)
colnames(sampling) <- c(1:3)
}
multi_fun <- function(s){
start.time <- Sys.time()
model <- kmeans(s,3,1)
end.time <- Sys.time()
time.taken <- end.time - start.time
accurancy <- model$cluster
accurancy <- sum(accurancy == ob)/100
return(list(accurancy,time.taken))
}
create_data <- function(sampling, p, sigma_e){
x_data <- NULL
if(p >10){
mu_num <- rep(0,(p - 10))
mu <- cbind(mu_num, mu_num, mu_num)
mu <- rbind(sampling,mu)
mu <- as.data.frame(mu)
} else {
mu <- as.data.frame(sampling)
}
d <- diag(sqrt(rep(sigma_e,p)))
dat_a = mvrnorm(20,mu = mu[,1],Sigma=  d)
dat_b = mvrnorm(30,mu = mu[,2],Sigma=  d)
dat_c = mvrnorm(50,mu = mu[,3],Sigma=  d)
x_data = rbind(dat_a, dat_b,dat_c)
return(x_data)
}
sigma_list <- c(1,2,5,7)
p <- c(10,20,50)
simulation <- function(sampling,p,sigma_list,B){
s_total <- NULL
for (i in p) {
for (j in sigma_list) {
s <- NULL
s <- replicate( n = B,sampling,simplify = F)
s <- lapply(s,create_data,p = i,sigma_e = j)
s <- lapply(s, multi_fun)
s_total <- cbind(s_total,s)
}
}
return(s_total)
}
gene <- simulation(sampling,p,sigma_list,50)
l <- c(paste0("p = ",10, ",sigma = ",1),paste0("p = ",10, ",sigma = ",2),
paste0("p = ",10, ",sigma = ",5),paste0("p = ",10, ",sigma = ",7),
paste0("p = ",20, ",sigma = ",1),paste0("p = ",20, ",sigma = ",2),
paste0("p = ",20, ",sigma = ",5),paste0("p = ",20, ",sigma = ",7),
paste0("p = ",50, ",sigma = ",1),paste0("p = ",50, ",sigma = ",2),
paste0("p = ",50, ",sigma = ",5),paste0("p = ",50, ",sigma = ",7))
temp <- NULL
temp2 <- NULL
for(i in 1:12){
df <- gene[,i]
df <- rbindlist(lapply(df, as.data.frame.list))
colnames(df) <- c("accurancy", "run.time")
temp2 <- rbind(temp2,list(df))
df <- round(c(avg = mean(df$accurancy),sd_accurancy = sd(df$accurancy)),3)
temp <- rbind(temp,df)
}
names(temp2) <- l
row.names(temp) <- l
temp <- as.data.frame(temp)
ggplot(temp,aes(x = sd_accurancy, y = avg)) + geom_point()
kable(temp) %>% kable_styling()
temp2 <-bind_rows(temp2, .id = "column_label")
ggplot(temp2, aes(x = run.time, y = accurancy)) + geom_line(aes(group = column_label))
ggplot(temp2, aes(x = run.time, y = accurancy)) + geom_line(aes(group_by(column_label))
ggplot(temp2, aes(x = run.time, y = accurancy)) + geom_line(aes(group_by(column_label))
ggplot(temp2, aes(x = run.time, y = accurancy)) + geom_line(aes(group_by(column_label)))
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_line()
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_line() + facet_wrap(~column_label)
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label), legend = FALSE) + geom_line() + facet_wrap(~column_label)
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_line() + facet_wrap(~column_label) + theme(legend.title = element_blank())
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_line() + facet_wrap(~column_label)+ theme(legend.position = "none")
ggplot(temp2, aes(x = run.time, y = accurancy, group = column_label, col = column_label)) + geom_point() + facet_wrap(~column_label)+ theme(legend.position = "none")
